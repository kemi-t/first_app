/* HTTPメソッド :8つある */処理の種類をサーバーへ伝えること
get       リクエストを取得する
post      送信する、作成する
put       更新する、作成する
delete    削除する
/* HTTPメソッド 記述方法 */
'HTTPメソッド' / 'URLパス' do

/* Railsコマンド */
rails _バージョン名_new アプリケーション命名 -d オプション名     新規アプリケーションの作成
rails db:create                             作成した新規アプリケーションにおける新規データベースの作成
rails s                                     サーバーの起動
 コントロールキー + c                           サーバーの停止
rails routes                                ルーティング設定の確認
rails g ファイルの種類 ファイル命名            必要ファイルとその関連ファイルの作成
  /*種類 controller   命名規則 複数形にすること*/
  /*種類 model   命名規則 大文字で始まる単数形にすること：マイグレーションファイルは、小文字で始まる複数形である*/
rails d ファイルの種類 ファイル命名            ファイルとその関連ファイルの削除
rails migreate                            マイグレーションファイルの反映
rails rollback                            マイグレーションファイルの差し戻し
rails migreate:status                     マイグレーションファイルの状況確認
rails c                                   コンソールの起動
 exit                                     コンソールの停止


/* 例外コマンド */
コマンドキー + t      ターミナル新規タブの立ち上げ

/* ルーティングの設定をしよう */
HTTPメソッド 'URIパターン' ,to 'コントローラー名 # アクション名'

/* ローカルホストの接続 */
localhost:3000/

/* コントローラーのアクション */
index    一覧表示ページを表示するリクエストに対応して動く
new      新規投稿ページを表示するリクエストに対応して動く
create   データの投稿を行うリクエストに対応して動く
show     個別詳細ページを表示するリクエストに対応して動く
edit     投稿編集ページを表示するリクエストに対応して動く
update   データの編集を行うリクエストに対応して動く
destroy  データの削除を行うリクエストに対応して動く

/* ビュー */
ERB      .html.erb
Rubyコードの埋め込み(ERBタグと呼ぶ)      <%= %> 表示させたい場合
                                     <% %> 表示させない場合

/* モデル */

/* モデル ファイルの記述 */
t.カラムの型:カラム命名
/* カラムの型 */
integer       数値  金額や回数など
string        文字（短文）  ユーザー名やメールアドレスなど
text          文字（長文）  投稿文や説明文など
boolean       真偽値  はい、いいえの選択。合格、不合格のフラグなど
datetime      日付と時刻  作成日時、更新日時

/* ターミナルからテーブルへデータを追加&保存 */
①コンソールの起動
②変数 = クラス名.new     インスタンスの生成と代入
③変数.カラム名 = 追加したいデータ      インスタンスにデータを追加
④変数.save       テーブルにレコードを保存
⑤コンソールの停止

/* テーブルからのデータ取得 */

/* ActiveRecord メソッド */   モデルがテーブルを操作することに関して使用できるメソッドの総称
.all             モデル毎のテーブル全データを取得する
.find(id番号)     テーブルのレコード内にある一つのデータを取得する
.カラム名          カラムのデータ一覧を取得する
.new             クラスのインスタンス（レコード）を生成する
.save            クラスのインスタンス（レコード）を保存する
.create(カラム名:値)

/* フォームの実装 */


/* ヘルパーメソッド */   主にビューでHTMLタグを出現させたりテキストを加工する為に使用するメソッド
form_with url:'/posts' , method :post , local :true do|ブロック変数|
link_to 'リンクに表示する文字' , 'リンク先URL'

text_field            一行のテキストボックス
password_field        パスワード入力ボックス
check_box             複数選択可能
radio_button          一つ選択
submit                送信ボタン